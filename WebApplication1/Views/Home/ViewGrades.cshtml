@model WebApplication1.Controllers.HomeController.GradeViewModel

@{
    ViewData["Title"] = "Xem điểm";
    Layout = "~/Views/Shared/_LayoutDaoTao.cshtml";
}

<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

<style>
    .container {
        margin-top: 20px;
    }

    .year-header {
        background-color: #007bff;
        color: white;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 20px;
        font-size: 1.5em;
        text-align: center;
    }

    .semester-header {
        color: #007bff;
        font-weight: bold;
        margin-bottom: 10px;
        font-size: 1.2em;
    }

    .annual-average {
        background-color: #f8f9fa;
        color: #333;
        padding: 10px;
        border-radius: 5px;
        margin-top: 10px;
        border: 1px solid #ddd;
        text-align: center;
        font-size: 1.5em;
    }

    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .export-btn {
        margin-top: 20px;
    }

    .badge-info {
        background-color: #007bff;
        color: white;
    }

    .badge {
        font-size: 1em;
        padding: 5px 10px;
    }

    .year-section {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        margin-bottom: 20px;
    }

    .average-score {
        font-size: 1.2em;
        font-weight: bold;
        color: #007bff;
    }

    .classification {
        font-size: 1.2em;
        font-weight: bold;
        margin-left: 10px;
    }
</style>

<div class="container">
    <h2 class="my-4">Chi Tiết Điểm Học Sinh</h2>
    @if (Model.SubjectGrades != null && Model.SubjectGrades.Any())
    {
        var groupedScores = Model.SubjectGrades
                                 .GroupBy(m => new { m.Semester, m.AcademicYear })
                                 .OrderBy(g => g.Key.AcademicYear)
                                 .ThenBy(g => g.Key.Semester);

        var academicYears = groupedScores.Select(g => g.Key.AcademicYear).Distinct().OrderBy(y => y).ToList();

        foreach (var year in academicYears)
        {
            var semester1Group = groupedScores.FirstOrDefault(g => g.Key.AcademicYear == year && g.Key.Semester == 1);
            var semester2Group = groupedScores.FirstOrDefault(g => g.Key.AcademicYear == year && g.Key.Semester == 2);

            decimal semester1Average = 0, semester2Average = 0, annualAverage = 0;
            string classification = "Yếu";

            <div class="year-section">
                <div class="year-header">Năm học @year</div>

                @* Semester 1 *@
                @{
                    if (semester1Group != null)
                    {
                        <div class="table-responsive">
                            <h4 class="semester-header">Kỳ 1</h4>
                            <table class="table table-bordered table-hover">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>Môn Học</th>
                                        <th>Thường xuyên</th>
                                        <th>Điểm 15 phút</th>
                                        <th>Điểm 1 tiết</th>
                                        <th>Giữa Kỳ</th>
                                        <th>Cuối Kỳ</th>
                                        <th>Tổng Kết</th>
                                        <th>Trạng Thái</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var semester1Total = 0m;
                                        var count1 = 0;

                                        foreach (var score in semester1Group)
                                        {
                                            var scoreArray = score.Scores?.Split(',') ?? new string[0];
                                            var thuongXuyen = scoreArray.Select(s => decimal.TryParse(s, out var result) ? result : 0).Sum();
                                            var tongKet = (thuongXuyen + (score.Score15 ?? 0) + (score.Score60 ?? 0) * 2 + (score.GiuaKi ?? 0) * 2 + (score.CuoiKi ?? 0) * 3) / 11;
                                            semester1Total += tongKet;
                                            count1++;

                                            <tr>
                                                <td>@score.SubjectName</td>
                                                <td>@score.Scores</td>
                                                <td>@score.Score15</td>
                                                <td>@score.Score60</td>
                                                <td>@score.GiuaKi</td>
                                                <td>@score.CuoiKi</td>
                                                <td>@tongKet.ToString("F2")</td>
                                                <td>@score.Status</td>
                                            </tr>
                                        }

                                        semester1Average = count1 > 0 ? semester1Total / count1 : 0;
                                    }
                                </tbody>
                            </table>
                            <h4 class="text-right">Điểm trung bình Kỳ 1: <span class="average-score">@semester1Average.ToString("F2")</span></h4>
                        </div>
                    }
                }

                @* Semester 2 *@
                @{
                    if (semester2Group != null)
                    {
                        <div class="table-responsive">
                            <h4 class="semester-header">Kỳ 2</h4>
                            <table class="table table-bordered table-hover">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>Môn Học</th>
                                        <th>Thường xuyên</th>
                                        <th>Điểm 15 phút</th>
                                        <th>Điểm 1 tiết</th>
                                        <th>Giữa Kỳ</th>
                                        <th>Cuối Kỳ</th>
                                        <th>Tổng Kết</th>
                                        <th>Trạng Thái</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var semester2Total = 0m;
                                        var count2 = 0;

                                        foreach (var score in semester2Group)
                                        {
                                            var scoreArray = score.Scores?.Split(',') ?? new string[0];
                                            var thuongXuyen = scoreArray.Select(s => decimal.TryParse(s, out var result) ? result : 0).Sum();
                                            var tongKet = (thuongXuyen + (score.Score15 ?? 0) + (score.Score60 ?? 0) * 2 + (score.GiuaKi ?? 0) * 2 + (score.CuoiKi ?? 0) * 3) / 11;
                                            semester2Total += tongKet;
                                            count2++;

                                            <tr>
                                                <td>@score.SubjectName</td>
                                                <td>@score.Scores</td>
                                                <td>@score.Score15</td>
                                                <td>@score.Score60</td>
                                                <td>@score.GiuaKi</td>
                                                <td>@score.CuoiKi</td>
                                                <td>@tongKet.ToString("F2")</td>
                                                <td>@score.Status</td>
                                            </tr>
                                        }

                                        semester2Average = count2 > 0 ? semester2Total / count2 : 0;
                                    }
                                </tbody>
                            </table>
                            <h4 class="text-right">Điểm trung bình Kỳ 2: <span class="average-score">@semester2Average.ToString("F2")</span></h4>
                        </div>
                    }
                }

                @* Annual average calculation and display *@
                @{
                    if (semester1Group != null && semester2Group != null)
                    {
                        annualAverage = ((semester1Average * 1) + (semester2Average * 2)) / 3;
                    }
                    else if (semester1Group != null || semester2Group != null)
                    {
                        annualAverage = semester1Group != null ? semester1Average : semester2Average;
                    }

                    if (annualAverage > 8m && (semester1Group == null || semester1Group.All(s => s.TongKet >= 6.5m)) && (semester2Group == null || semester2Group.All(s => s.TongKet >= 6.5m)))
                    {
                        classification = "Học sinh giỏi";
                    }
                    else if (annualAverage > 6.5m && (semester1Group == null || semester1Group.All(s => s.TongKet >= 5m)) && (semester2Group == null || semester2Group.All(s => s.TongKet >= 5m)))
                    {
                        classification = "Học sinh khá";
                    }
                    else if (annualAverage > 4m && (semester1Group == null || semester1Group.All(s => s.TongKet >= 4m)) && (semester2Group == null || semester2Group.All(s => s.TongKet >= 4m)))
                    {
                        classification = "Trung bình";
                    }
                    else
                    {
                        classification = "Yếu";
                    }
                }

                <div class="annual-average">
                    <h4>Điểm trung bình cả năm: @annualAverage.ToString("F2") <span class="classification">(@classification)</span></h4>
                </div>
            </div>
        }
    }

    <a href="@Url.Action("ExportStudentScoresToExcel", "Home", new { studentId = Model.StudentId })" class="btn btn-success export-btn"><i class="fas fa-file-excel"></i> Export to Excel</a>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"></script>
